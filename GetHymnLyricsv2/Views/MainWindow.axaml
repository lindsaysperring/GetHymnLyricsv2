<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:GetHymnLyricsv2.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:system="clr-namespace:System;assembly=System.Runtime"
        xmlns:views="clr-namespace:GetHymnLyricsv2.Views"
        mc:Ignorable="d" d:DesignWidth="1000" d:DesignHeight="600"
        x:Class="GetHymnLyricsv2.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        Icon="/Assets/gethymnlyrics-logo.ico"
        Title="Hymn Editor">

	<Design.DataContext>
		<!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
		<vm:MainWindowViewModel/>
	</Design.DataContext>

	<Grid RowDefinitions="Auto,Auto,*">
		<!-- Update Banner -->
		<Border Grid.Row="0" 
				Background="#007ACC" 
				Padding="10"
				IsVisible="{Binding UpdateAvailable}">
			<Grid ColumnDefinitions="*,Auto">
				<TextBlock Grid.Column="0" 
						  Text="{Binding UpdateVersion, StringFormat='Version {0} is available!'}"
						  Foreground="White"
						  VerticalAlignment="Center"/>
				<Button Grid.Column="1"
						Content="View Update"
						Command="{Binding OpenUpdateInfoCommand}"
						CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}}"
						Margin="10,0,0,0"/>
			</Grid>
		</Border>

		<!-- Toolbar -->
		<Grid Grid.Row="1" Margin="10">
			<StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
				<Button Command="{Binding OpenFileCommand}"
						CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}}"
						Content="Open File"
						Margin="0,0,10,0"/>
				<Button Command="{Binding SaveFileCommand}"
						CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}}"
						Content="Save File"/>
			</StackPanel>
			<StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Spacing="10">
				<Button Command="{Binding CheckForUpdatesCommand}"
						CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}}"
						Content="Check for Updates"/>
				<Button Command="{Binding OpenSettingsCommand}"
						CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}}"
						Content="Settings"/>
			</StackPanel>
		</Grid>

		<!-- Main Content -->
		<Grid Grid.Row="2" ColumnDefinitions="300,*">
			<!-- Song List -->
			<Grid Grid.Column="0" RowDefinitions="Auto,Auto,*" Margin="10">
				<StackPanel Grid.Row="0" Orientation="Horizontal" Margin="0,0,0,10">
					<Button Command="{Binding AddSongCommand}"
                            Content="Add Song"
                            Margin="0,0,10,0"/>
					<Button Command="{Binding DeleteSongCommand}"
                            Content="Delete Song"
                            IsEnabled="{Binding SelectedSong, Converter={x:Static ObjectConverters.IsNotNull}}"/>
				</StackPanel>
				<TextBox Grid.Row="1"
                        Text="{Binding SearchText}"
                        Watermark="Search songs..."
                        Margin="0,0,0,10"/>
				<ListBox Grid.Row="2"
                        ItemsSource="{Binding FilteredSongs}"
                        SelectedItem="{Binding SelectedSong}">
					<ListBox.ItemTemplate>
						<DataTemplate>
							<StackPanel>
								<TextBlock Text="{Binding Number, StringFormat='#{0}'}"
                                        FontWeight="Bold"/>
								<TextBlock Text="{Binding Title}"/>
							</StackPanel>
						</DataTemplate>
					</ListBox.ItemTemplate>
				</ListBox>
			</Grid>

			<!-- Song Details and Sections -->
			<TabControl Grid.Column="1" IsVisible="{Binding SelectedSong, Converter={x:Static ObjectConverters.IsNotNull}}" VerticalAlignment="Stretch">
				<TabItem Header="Editor">
					<views:EditorView DataContext="{Binding}"/>
				</TabItem>
				<TabItem Header="Preview">
					<views:PreviewView DataContext="{Binding}"/>
				</TabItem>
			</TabControl>
		</Grid>
	</Grid>
</Window>
